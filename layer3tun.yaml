# This is a WIP of using a L3 ipsec VPn than using a software container to reduce saturation of link download & play
#
# The concept is that there is a extra interface as a gateway , removing the need for gluetun
#
# Lan - Routes out of home ISP and accessiable on home network
# l3 - Routes out of VPN and is inaccessible 
# 
# Idea- 
# Ports are assigned to the individual containers , they are all dual homed in a sense 
# Double networks are assigned for port access but routing is defined per host for where to get www traffic 

version: '3.8'

networks:
  lan_network:
    driver: macvlan
    driver_opts:
      parent: enp1s0
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

  vpn_network:
    driver: macvlan
    driver_opts:
      parent: enp2s0
    ipam:
      config:
        - subnet: 10.10.0.0/24
          gateway: 10.10.0.1

services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
    volumes:
      - jellyfin_config:/config
      - jellyfin_cache:/cache
      - movies:/movies
      - series:/series
    networks:
      - lan_network
    ports:
      - 8096:8096
    restart: unless-stopped
    
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - UMASK=000
      - TZ=${TZ}
    volumes:
      - qbittorrent_config:/config
      - movies:/movies
      - series:/series
    networks:
      - vpn_network
    ports:
      - "8080:8080"     
    restart: unless-stopped

  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
    volumes:
      - nzbget_config:/config
      - nzbget_queue:/queue
      - movies:/movies
      - series:/series
    networks:
      - vpn_network
    ports:
      - "6789:6789"   
    restart: unless-stopped


  prowlarr:
    image: linuxserver/prowlarr:nightly
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
    volumes:
      - /home/aman/prowlarr/config:/config
    networks:
      - vpn_network
    ports:
      - "9696:9696"   
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
    volumes:
      - /home/aman/sonarr/config:/config
      - movies:/movies
      - series:/series
    networks:
      - vpn_network
    ports:
      - "8989:8989"   
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - JELLYFIN_API_URL=http://jellyfin:8096
      - JELLYFIN_API_KEY=${JELLYFIN_API_KEY}
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
    volumes:
      - jellyseerr_config:/app/config
      - movies:/movies
      - series:/series
    networks:
      - lan_network
    ports:
      - 5055:5055
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:nightly
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/aman/radarr/config:/config
      - movies:/movies
      - series:/series
    networks:
      - vpn_network
    ports:
      - "7878:7878"   
    restart: unless-stopped

volumes:
  qbittorrent_config:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/qbittorrent_config"
  jellyfin_config:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/jellyfin_config"
  jellyfin_cache:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/jellyfin_cache"
  nzbget_config:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/nzbget_config"
  nzbget_queue:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/nzbget_queue"
  prowlarr_blackhole:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/prowlarr_torrent-blackhole"
  jellyseerr_config:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/jellyseerr_config"
  movies:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/movies"
  series:
    driver_opts:
      type: "nfs"
      o: "addr=${NFS_SERVER_IP},rw,nfsvers=4"
      device: ":/series"

networks:
  media_net:
    driver: bridge
  vpn_net:
    driver: bridge
